{"meta":{"title":"RELAX","subtitle":"王洪庆的个人博客","description":"尽人事 听天命","author":null,"url":"http://wanghongqing.com"},"pages":[{"title":"分类","date":"2018-05-13T14:25:10.000Z","updated":"2018-05-13T14:26:19.264Z","comments":true,"path":"categories/index.html","permalink":"http://wanghongqing.com/categories/index.html","excerpt":"","text":""},{"title":"关于作者","date":"2018-05-13T15:08:20.000Z","updated":"2018-05-13T15:09:10.866Z","comments":true,"path":"about/index.html","permalink":"http://wanghongqing.com/about/index.html","excerpt":"","text":"test"},{"title":"标签","date":"2018-05-13T14:18:32.000Z","updated":"2018-05-13T14:26:18.124Z","comments":true,"path":"tags/index.html","permalink":"http://wanghongqing.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Labview Actor Framework学习教程I：创建'反馈式蒸发冷却器'项目","slug":"Labview-Actor-Framework-study-Evaporative-Cooler","date":"2018-05-30T13:39:22.000Z","updated":"2018-06-10T13:28:19.560Z","comments":true,"path":"2018/05/30/Labview-Actor-Framework-study-Evaporative-Cooler/","link":"","permalink":"http://wanghongqing.com/2018/05/30/Labview-Actor-Framework-study-Evaporative-Cooler/","excerpt":"想学习Labview的面向对象编程吗？一起来看看NI自带的例程：Evaporative Cooler（反馈式蒸发冷却器）是如何基于Actor Framework实现高质量代码设计的。（需要说明的是，AF属于Labview的高级框架，学习之前最好有一定的labview编程经验）","text":"想学习Labview的面向对象编程吗？一起来看看NI自带的例程：Evaporative Cooler（反馈式蒸发冷却器）是如何基于Actor Framework实现高质量代码设计的。（需要说明的是，AF属于Labview的高级框架，学习之前最好有一定的labview编程经验） 简介Actor Framework (AF 操作者框架) 是美国National Instrument公司于2012年推出的一种Labview高级框架，基于Objective Oriented Programming (OOP 面向对象) 设计。这种框架非常适合用来设计大型复杂项目，在很大程度上解决了labview一直以来代码一复杂就变成“意大利面条”的窘境，真正实现了具备可调整(scalable)、模块化(modular)、可复用(reusable)、可扩展(extendable)、简单(simple)（简称smores）5大特性的高质量代码。 安装Labview要学习AF，首先需要安装Labview，本文将以Labview 2015作为编译环境，大家可以在网上搜索并下载Labview 2015或者更高版本。需要注意的是近期NI发布了一个新版本Labview NXG与Labview 20xx系列并不通用，请勿选择NXG版。 创建”反馈式蒸发冷却器” 打开Labview 2015，选择创建项目-&gt;反馈式蒸发冷却器，如图: 下一步设置项目名称与目录： 随后程序会自动完成创建，并进入项目浏览器：至此，项目创建完成。点击Application-&gt;Application Launcher-&gt;Splash Screen打开项目前面板，点击运行，进入项目主程序：未完待续下一节将介绍项目的整体运行思路。","categories":[],"tags":[{"name":"Labview","slug":"Labview","permalink":"http://wanghongqing.com/tags/Labview/"},{"name":"Actor Framework","slug":"Actor-Framework","permalink":"http://wanghongqing.com/tags/Actor-Framework/"}]},{"title":"搭建一个完全属于自己的独立博客","slug":"搭建一个完全属于自己的独立博客","date":"2018-05-14T15:09:35.000Z","updated":"2018-06-10T11:43:45.445Z","comments":true,"path":"2018/05/14/搭建一个完全属于自己的独立博客/","link":"","permalink":"http://wanghongqing.com/2018/05/14/搭建一个完全属于自己的独立博客/","excerpt":"已经不记得最初是因为什么而要建这个博客站，但这已经不重要了，这里把建站的过程记录一下，说不定什么时候有需要可以再翻出来看看。有道云笔记同步地址请点击","text":"已经不记得最初是因为什么而要建这个博客站，但这已经不重要了，这里把建站的过程记录一下，说不定什么时候有需要可以再翻出来看看。有道云笔记同步地址请点击 Hexo+Github这个博客站是基于Hexo+Github Page建立的，一开始在网上搜怎么建一个独立博客，就看到有人推荐Github的方式，正好我有Github的账号，所以也没多想，就跟着做，后来又看到有人推荐Hexo，这上面有非常丰富的主题，瞬间颜值就上去了。参考网站： 如何搭建一个独立博客——简明 GitHub Pages与 jekyll 教程 基于hexo+github搭建一个独立博客 Next主题我这个博客选用的是Next主题，官网上有非常详细的使用教程，非常适合像我这种初学者。不过我这次建站发现官网提供的下载方式版本比较老，可以在它的Github网站下载最新的版本（本站基于v6.3.0）。参考网站： 打造个性超赞博客Hexo+NexT+GithubPages的超深度优化 hexo+next主题优化之加入网易云音乐、网易云跟帖、炫酷动态背景 域名&amp;Github空间绑定在GoDaddy购买了两年的域名，107大洋，其中7大洋是第一年，后面100大洋/每年，说实话略贵，不过谁让咱有钱（此处应该有个笑哭的表情）。Github空间绑定，即DNS解析我用的DNSpod，具体操作方式可以搜索上面的参考教程。 统计本站选用百度统计用来监控博客流量，以及不蒜子来记录阅读量，这两种统计方法next都内置了，只需要在themes\\next\\_config.yml中进行设置。参考网站： Hexo + github 打造个人博客 图床本站选用七牛用来存储博客图片，便于统一管理。 评论Gitment本站起初是选用了imsun大神基于Github issues制作的Gitment评论系统。这个系统的好处是和Github一脉相承，给人的感觉简洁自然。但缺点也很明显，它必须使用Github账号登录后才能评论，而且目前还没有直接添加表情的功能，需要基于markdown语法输入。 Valine由于Gitment过于高大上，所以后来还是放弃了，改用Valine，无需登录就能评论，既支持markdown也有emoji表情包，完全满足我的要求。同时Next原生支持Valine，在themes\\next\\_config.yml中搜索valine进行配置。但Valine也有问题，无需登录是把双刃剑，什么乱七八糟的人都可能来评论，花费大量时间来管理评论可不是什么好事。所以后来也放弃了。Valine参考网站： Valine快速开始 Gitalk在网上寻找评论系统的时候看到了Gitalk，和Gitment一样，也是利用了Github Issue来进行评论，所以存在的问题也和Gitment如出一辙：没有直接表情添加，需要Github账号。不过最后我还是选择了Gitalk，原因有二： 相较于不登录评论，我更倾向于登录评论，开这个博客主要是记录一些工作学习中的心得体会，很大程度上其实是写给自己看的，由于是Github账号，评论素质不会太差，可以免去一些不必要的麻烦。 相较于Gitment，我更喜欢Gitalk的风格，感觉更加炫酷一些，当然这个喜好因人而异。 注意突然发现gitment&amp;gitalk都有一个神奇的bug，新日志的评论会覆盖掉老日志的，实在没有能力解决，还是换成Valine吧。。。 这里选择Gitment或Gitalk评论系统时，极有可能出现一个大坑Error: Validation Failed ，原因是：&gt; 文章名称经URL编码后添加到issues的label里，但是label的长度上限是50个字符，所以文章名有些长的都会生成label失败，也就没办法评论了。解决办法：打开themes\\next\\layout\\_third-party\\comments\\gitment(gitalk).swig，将id: window.location.pathname(id: location.pathname)改为id: &#39;&lt;%= page.date %&gt;&#39; 嵌入网易云音乐试用了一天后，感觉很吵，直接关掉了，哈哈哈。具体方法可以参考教程，不过在得到外链后可以将链接直接复制到 themes\\next\\layout\\_custom 文件夹下的sidebar.swig文件里，这个文件默认是个空文件，就是用来添加一些自定义的内容到侧边栏。同理，如果想把音乐放在博客头部，可以复制到header.swig文件里。","categories":[{"name":"随记","slug":"随记","permalink":"http://wanghongqing.com/categories/随记/"}],"tags":[{"name":"随记","slug":"随记","permalink":"http://wanghongqing.com/tags/随记/"}]}]}